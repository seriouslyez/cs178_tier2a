{"version":3,"file":"deepSet.js","sources":["../../../src/utils/deepSet.ts"],"sourcesContent":["import type { Obj, DeepSetResult } from '../types';\nimport { _mapValues } from './mapValues';\nimport { _isPlainObject } from './isPlainObject';\n\nfunction handleArray<Value>(value: Value) {\n  return function (propVal: Obj) {\n    if (_isPlainObject(propVal)) {\n      const { key, ...field } = deepSet(propVal as Obj, value);\n      return field;\n    }\n    return value;\n  };\n}\n\n/**\n * @category Helper\n */\nexport function deepSet<Data extends Obj, Value>(\n  obj: Data,\n  value: Value\n): DeepSetResult<Data, Value> {\n  return _mapValues(obj, (prop) =>\n    _isPlainObject(prop)\n      ? deepSet(prop as Obj, value)\n      : Array.isArray(prop)\n      ? prop.map(handleArray(value))\n      : value\n  ) as DeepSetResult<Data, Value>;\n}\n"],"names":[],"mappings":";;;;AAIA,SAAS,WAAW,CAAQ,KAAY,EAAA;AACtC,IAAA,OAAO,UAAU,OAAY,EAAA;AAC3B,QAAA,IAAI,cAAc,CAAC,OAAO,CAAC,EAAE;AAC3B,YAAA,MAAM,KAAoB,OAAO,CAAC,OAAc,EAAE,KAAK,CAAC,CAAA,CAAxC,KAAK,GAAf,MAAA,CAAA,EAAA,EAAA,CAAA,KAAA,CAAiB,EAAkC;AACzD,YAAA,OAAO,KAAK,CAAC;AACd,SAAA;AACD,QAAA,OAAO,KAAK,CAAC;AACf,KAAC,CAAC;AACJ,CAAC;AAED;;AAEG;AACa,SAAA,OAAO,CACrB,GAAS,EACT,KAAY,EAAA;AAEZ,IAAA,OAAO,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,KAC1B,cAAc,CAAC,IAAI,CAAC;AAClB,UAAE,OAAO,CAAC,IAAW,EAAE,KAAK,CAAC;AAC7B,UAAE,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC;cACnB,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;cAC5B,KAAK,CACoB,CAAC;AAClC;;;;"}