{"version":3,"file":"stores.js","sources":["../../src/stores.ts"],"sourcesContent":["import type {\n  StoreFactory,\n  Obj,\n  Keyed,\n  FormConfig,\n  Errors,\n  Touched,\n  ValidationFunction,\n  PartialWritableErrors,\n  AssignableErrors,\n  KeyedWritable,\n  Writable,\n  Readable,\n  Unsubscriber,\n} from '@felte/common';\nimport {\n  _cloneDeep,\n  deepSet,\n  _isPlainObject,\n  _mergeWith,\n  runValidations,\n  mergeErrors,\n  executeTransforms,\n  deepSome,\n  debounce,\n} from '@felte/common';\nimport { deepSetTouched } from './deep-set-touched';\nimport { deepRemoveKey, deepSetKey } from './deep-set-key';\n\ntype ValidationController = {\n  signal: {\n    readonly aborted: boolean;\n    readonly priority: boolean;\n  };\n  abort(): void;\n};\n\nfunction createValidationController(priority: boolean): ValidationController {\n  const signal = { aborted: false, priority };\n  return {\n    signal,\n    abort() {\n      signal.aborted = true;\n    },\n  };\n}\n\nexport function errorFilterer(touchValue?: unknown, errValue?: unknown) {\n  if (_isPlainObject(touchValue)) {\n    if (\n      !errValue ||\n      (_isPlainObject(errValue) && Object.keys(errValue).length === 0)\n    ) {\n      return deepSet(touchValue, null);\n    }\n    return;\n  }\n  if (Array.isArray(touchValue)) {\n    if (touchValue.some(_isPlainObject)) return;\n    const errArray = Array.isArray(errValue) ? errValue : [];\n    return touchValue.map((value, index) => {\n      const err = errArray[index];\n      if (Array.isArray(err) && err.length === 0) return null;\n      return (value && err) || null;\n    });\n  }\n  if (Array.isArray(errValue) && errValue.length === 0) return null;\n  if (Array.isArray(errValue)) return touchValue ? errValue : null;\n  return touchValue && errValue ? [errValue] : null;\n}\n\nexport function warningFilterer(touchValue?: unknown, errValue?: unknown) {\n  if (_isPlainObject(touchValue)) {\n    if (\n      !errValue ||\n      (_isPlainObject(errValue) && Object.keys(errValue).length === 0)\n    ) {\n      return deepSet(touchValue, null);\n    }\n    return;\n  }\n  if (Array.isArray(touchValue)) {\n    if (touchValue.some(_isPlainObject)) return;\n    const errArray = Array.isArray(errValue) ? errValue : [];\n    return touchValue.map((_, index) => {\n      const err = errArray[index];\n      if (Array.isArray(err) && err.length === 0) return null;\n      return err || null;\n    });\n  }\n  if (Array.isArray(errValue) && errValue.length === 0) return null;\n  if (Array.isArray(errValue)) return errValue;\n  return errValue ? [errValue] : null;\n}\n\nfunction filterErrors<Data extends Obj>([errors, touched]: [\n  Errors<Data>,\n  Touched<Data>\n]) {\n  return _mergeWith<Errors<Data>>(touched, errors, errorFilterer);\n}\n\nfunction filterWarnings<Data extends Obj>([errors, touched]: [\n  Errors<Data>,\n  Touched<Data>\n]) {\n  return _mergeWith<Errors<Data>>(touched, errors, warningFilterer);\n}\n\ntype Readables =\n  | Readable<any>\n  | [Readable<any>, ...Array<Readable<any>>]\n  | Array<Readable<any>>;\n\ntype ReadableValues<T> = T extends Readable<infer U>\n  ? [U]\n  : { [K in keyof T]: T[K] extends Readable<infer U> ? U : never };\n\ntype PossibleWritable<T> = Readable<T> & {\n  update?: (updater: (v: T) => T) => void;\n  set?: (v: T) => void;\n};\n\n// A `derived` store factory that can defer subscription and be constructed\n// with any store factory.\nexport function createDerivedFactory<StoreExt = Record<string, any>>(\n  storeFactory: StoreFactory<StoreExt>\n) {\n  return function derived<R, T extends Readables = Readables>(\n    storeOrStores: T,\n    deriver: (values: ReadableValues<T>) => R,\n    initialValue: R\n  ): [PossibleWritable<R> & StoreExt, () => void, () => void] {\n    const stores: Readable<any>[] = Array.isArray(storeOrStores)\n      ? storeOrStores\n      : [storeOrStores];\n    const values: any[] = new Array(stores.length);\n    const derivedStore: PossibleWritable<R> & StoreExt = storeFactory(\n      initialValue\n    );\n\n    const storeSet = derivedStore.set as Writable<R>['set'];\n    const storeSubscribe = derivedStore.subscribe;\n    let unsubscribers: Unsubscriber[] | undefined;\n\n    function startStore() {\n      unsubscribers = stores.map((store, index) => {\n        return store.subscribe(($store: any) => {\n          values[index] = $store;\n          storeSet(deriver(values as ReadableValues<T>));\n        });\n      });\n    }\n\n    function stopStore() {\n      unsubscribers?.forEach((unsub) => unsub());\n    }\n\n    derivedStore.subscribe = function subscribe(\n      subscriber: (value: R) => void\n    ) {\n      const unsubscribe = storeSubscribe(subscriber);\n      return () => {\n        unsubscribe();\n      };\n    };\n\n    return [derivedStore, startStore, stopStore];\n  };\n}\n\nexport function createStores<Data extends Obj, StoreExt = Record<string, any>>(\n  storeFactory: StoreFactory<StoreExt>,\n  config: FormConfig<Data> & { preventStoreStart?: boolean }\n) {\n  const derived = createDerivedFactory(storeFactory);\n  const initialValues = (config.initialValues = config.initialValues\n    ? deepSetKey(\n        executeTransforms(\n          _cloneDeep(config.initialValues as Data),\n          config.transform\n        )\n      )\n    : ({} as Data));\n  const initialTouched = deepSetTouched(deepRemoveKey(initialValues), false);\n  const touched = storeFactory(initialTouched);\n\n  const validationCount = storeFactory(0);\n  const [isValidating, startIsValidating, stopIsValidating] = derived(\n    [touched, validationCount],\n    ([$touched, $validationCount]) => {\n      const isTouched = deepSome($touched as Obj, (t) => !!t);\n      return isTouched && $validationCount >= 1;\n    },\n    false\n  );\n\n  // It is important not to destructure stores created with the factory\n  // since some stores may be callable.\n  delete isValidating.set;\n  delete isValidating.update;\n\n  function cancellableValidation<Data extends Obj>(\n    store: PartialWritableErrors<Data>\n  ) {\n    let activeController: ValidationController | undefined;\n    return async function executeValidations(\n      $data: Data,\n      shape: Errors<Data>,\n      validations?: ValidationFunction<Data>[] | ValidationFunction<Data>,\n      priority = false\n    ) {\n      if (!validations || !$data) return;\n      let current =\n        shape && Object.keys(shape).length > 0\n          ? shape\n          : (deepSet($data, []) as Errors<Data>);\n\n      // Keeping a controller allows us to cancel previous asynchronous\n      // validations if they've become stale.\n      const controller = createValidationController(priority);\n\n      // By assigning `priority` we can prevent specific validations\n      // from being aborted. Used when submitting the form or\n      // calling the `validate` helper.\n      if (!activeController?.signal.priority || priority) {\n        activeController?.abort();\n        activeController = controller;\n      }\n\n      // If the current controller has priority and we're not trying to\n      // override it, completely prevent validations\n      if (activeController.signal.priority && !priority) return;\n      validationCount.update((c) => c + 1);\n      const results = runValidations($data, validations);\n      results.forEach(async (promise: any) => {\n        const result = await promise;\n        if (controller.signal.aborted) return;\n        current = mergeErrors([current, result]);\n        store.set(current);\n      });\n      await Promise.all(results);\n      activeController = undefined;\n      validationCount.update((c) => c - 1);\n      return current;\n    };\n  }\n\n  let storesShape = deepSet(initialTouched, []) as Errors<Data>;\n  const data = storeFactory(initialValues);\n\n  const initialErrors = deepSet(initialTouched, []) as Errors<Data>;\n  const immediateErrors = storeFactory(\n    initialErrors\n  ) as PartialWritableErrors<Data> & StoreExt;\n  const debouncedErrors = storeFactory(\n    _cloneDeep(initialErrors)\n  ) as PartialWritableErrors<Data> & StoreExt;\n  const [errors, startErrors, stopErrors] = derived<Errors<Data>>(\n    [\n      immediateErrors as Readable<Errors<Data>>,\n      debouncedErrors as Readable<Errors<Data>>,\n    ],\n    mergeErrors,\n    _cloneDeep(initialErrors)\n  );\n\n  const initialWarnings = deepSet(initialTouched, []) as Errors<Data>;\n  const immediateWarnings = storeFactory(\n    initialWarnings\n  ) as PartialWritableErrors<Data> & StoreExt;\n  const debouncedWarnings = storeFactory(\n    _cloneDeep(initialWarnings)\n  ) as PartialWritableErrors<Data> & StoreExt;\n  const [warnings, startWarnings, stopWarnings] = derived<Errors<Data>>(\n    [\n      immediateWarnings as Readable<Errors<Data>>,\n      debouncedWarnings as Readable<Errors<Data>>,\n    ],\n    mergeErrors,\n    _cloneDeep(initialWarnings)\n  );\n\n  const [filteredErrors, startFilteredErrors, stopFilteredErrors] = derived(\n    [errors as Readable<Errors<Data>>, touched as Readable<Touched<Data>>],\n    filterErrors,\n    _cloneDeep(initialErrors)\n  );\n\n  const [\n    filteredWarnings,\n    startFilteredWarnings,\n    stopFilteredWarnings,\n  ] = derived(\n    [warnings as Readable<Errors<Data>>, touched as Readable<Touched<Data>>],\n    filterWarnings,\n    _cloneDeep(initialWarnings)\n  );\n\n  // This is necessary since, on the first run, validations\n  // have not run yet. We assume the form is not valid in the first calling\n  // if there's validation functions assigned in the configuration.\n  let firstCalled = false;\n  const [isValid, startIsValid, stopIsValid] = derived(\n    errors,\n    ([$errors]) => {\n      if (!firstCalled) {\n        firstCalled = true;\n        return !config.validate && !config.debounced?.validate;\n      } else {\n        return !deepSome($errors, (error) =>\n          Array.isArray(error) ? error.length >= 1 : !!error\n        );\n      }\n    },\n    !config.validate && !config.debounced?.validate\n  );\n\n  delete isValid.set;\n  delete isValid.update;\n\n  const isSubmitting = storeFactory(false);\n\n  const isDirty = storeFactory(false);\n\n  const interacted = storeFactory<string | null>(null);\n\n  const validateErrors = cancellableValidation(immediateErrors);\n  const validateWarnings = cancellableValidation(immediateWarnings);\n  const validateDebouncedErrors = cancellableValidation(debouncedErrors);\n  const validateDebouncedWarnings = cancellableValidation(debouncedWarnings);\n  const _validateDebouncedErrors = debounce(\n    validateDebouncedErrors,\n    config.debounced?.validateTimeout ?? config.debounced?.timeout ?? 300,\n    {\n      onInit: () => {\n        validationCount.update((c) => c + 1);\n      },\n      onEnd: () => {\n        validationCount.update((c) => c - 1);\n      },\n    }\n  );\n  const _validateDebouncedWarnings = debounce(\n    validateDebouncedWarnings,\n    config.debounced?.warnTimeout ?? config.debounced?.timeout ?? 300\n  );\n\n  async function executeErrorsValidation(\n    data: Data | Keyed<Data>,\n    altValidate?: ValidationFunction<Data> | ValidationFunction<Data>[]\n  ): Promise<Errors<Data> | undefined> {\n    const $data = deepRemoveKey(data);\n    const errors = validateErrors(\n      $data,\n      storesShape,\n      altValidate ?? config.validate,\n      true\n    );\n    if (altValidate) return errors;\n    const debouncedErrors = validateDebouncedErrors(\n      $data,\n      storesShape,\n      config.debounced?.validate,\n      true\n    );\n    return mergeErrors<Errors<Data>>(\n      await Promise.all([errors, debouncedErrors])\n    );\n  }\n\n  async function executeWarningsValidation(\n    data: Data | Keyed<Data>,\n    altWarn?: ValidationFunction<Data> | ValidationFunction<Data>[]\n  ): Promise<Errors<Data> | undefined> {\n    const $data = deepRemoveKey(data);\n    const warnings = validateWarnings(\n      $data,\n      storesShape,\n      altWarn ?? config.warn,\n      true\n    );\n    if (altWarn) return warnings;\n    const debouncedWarnings = validateDebouncedWarnings(\n      $data,\n      storesShape,\n      config.debounced?.warn,\n      true\n    );\n    return mergeErrors<Errors<Data>>(\n      await Promise.all([warnings, debouncedWarnings])\n    );\n  }\n\n  let errorsValue = initialErrors;\n  let warningsValue = initialWarnings;\n  function start() {\n    const dataUnsubscriber = data.subscribe(($keyedData) => {\n      const $data = deepRemoveKey($keyedData);\n      validateErrors($data, storesShape, config.validate);\n      validateWarnings($data, storesShape, config.warn);\n      _validateDebouncedErrors($data, storesShape, config.debounced?.validate);\n      _validateDebouncedWarnings($data, storesShape, config.debounced?.warn);\n    });\n\n    const unsubscribeTouched = touched.subscribe(($touched) => {\n      storesShape = deepSet($touched, []) as Errors<Data>;\n    });\n    const unsubscribeErrors = errors.subscribe(($errors) => {\n      errorsValue = $errors;\n    });\n    const unsubscribeWarnings = warnings.subscribe(($warnings) => {\n      warningsValue = $warnings;\n    });\n\n    startErrors();\n    startIsValid();\n    startWarnings();\n    startFilteredErrors();\n    startFilteredWarnings();\n    startIsValidating();\n\n    function cleanup() {\n      dataUnsubscriber();\n      stopFilteredErrors();\n      stopErrors();\n      stopWarnings();\n      stopFilteredWarnings();\n      stopIsValid();\n      stopIsValidating();\n      unsubscribeTouched();\n      unsubscribeErrors();\n      unsubscribeWarnings();\n    }\n    return cleanup;\n  }\n\n  function publicErrorsUpdater(\n    updater: (value: Errors<Data>) => AssignableErrors<Data>\n  ): void {\n    immediateErrors.set(updater(errorsValue));\n    debouncedErrors.set({} as AssignableErrors<Data>);\n  }\n\n  function publicWarningsUpdater(\n    updater: (value: Errors<Data>) => AssignableErrors<Data>\n  ): void {\n    immediateWarnings.set(updater(warningsValue));\n    debouncedWarnings.set({} as AssignableErrors<Data>);\n  }\n\n  function publicErrorsSetter(value: AssignableErrors<Data>): void {\n    publicErrorsUpdater(() => value);\n  }\n\n  function publicWarningsSetter(value: AssignableErrors<Data>): void {\n    publicWarningsUpdater(() => value);\n  }\n\n  filteredErrors.set = publicErrorsSetter;\n  (filteredErrors as PartialWritableErrors<Data>).update = publicErrorsUpdater;\n  filteredWarnings.set = publicWarningsSetter;\n  (filteredWarnings as PartialWritableErrors<Data>).update = publicWarningsUpdater;\n\n  return {\n    data: data as KeyedWritable<Data> & StoreExt,\n    errors: filteredErrors as PartialWritableErrors<Data> & StoreExt,\n    warnings: filteredWarnings as PartialWritableErrors<Data> & StoreExt,\n    touched,\n    isValid,\n    isSubmitting,\n    isDirty,\n    isValidating,\n    interacted,\n    validateErrors: executeErrorsValidation,\n    validateWarnings: executeWarningsValidation,\n    cleanup: config.preventStoreStart ? () => undefined : start(),\n    start,\n  };\n}\n"],"names":[],"mappings":"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"}