{"version":3,"file":"create-form-action.js","sources":["../../src/create-form-action.ts"],"sourcesContent":["import type {\n  Extender,\n  Obj,\n  Stores,\n  FormConfig,\n  TransformFunction,\n  ExtenderHandler,\n  FormControl,\n  AddValidatorFn,\n  Helpers,\n  Form,\n} from '@felte/common';\nimport {\n  isFormControl,\n  shouldIgnore,\n  isInputElement,\n  isSelectElement,\n  isElement,\n  getInputTextOrNumber,\n  _get,\n  _set,\n  _unset,\n  _merge,\n  _cloneDeep,\n  _defaultsDeep,\n  getPath,\n  getFormDefaultValues,\n  getFormControls,\n  _isPlainObject,\n  debounce,\n} from '@felte/common';\nimport { get } from './get';\n\nexport type FormActionConfig<Data extends Obj> = {\n  stores: Stores<Data>;\n  config: FormConfig<Data>;\n  extender: Extender<Data>[];\n  helpers: Helpers<Data, string> & {\n    addValidator: AddValidatorFn<Data>;\n    addTransformer(transformer: TransformFunction<Data>): void;\n  };\n  createSubmitHandler: Form<Data>['createSubmitHandler'];\n  handleSubmit: Form<Data>['handleSubmit'];\n  _setFormNode(node: HTMLFormElement): void;\n  _getInitialValues(): Data;\n  _setCurrentExtenders(extenders: ExtenderHandler<Data>[]): void;\n  _getCurrentExtenders(): ExtenderHandler<Data>[];\n};\n\nexport function createFormAction<Data extends Obj>({\n  helpers,\n  stores,\n  config,\n  extender,\n  createSubmitHandler,\n  handleSubmit,\n  _setFormNode,\n  _getInitialValues,\n  _setCurrentExtenders,\n  _getCurrentExtenders,\n}: FormActionConfig<Data>) {\n  const { setFields, setTouched, reset, setInitialValues } = helpers;\n  const { addValidator, addTransformer, validate } = helpers;\n  const {\n    data,\n    errors,\n    warnings,\n    touched,\n    isSubmitting,\n    isDirty,\n    interacted,\n    isValid,\n    isValidating,\n  } = stores;\n\n  function form(node: HTMLFormElement) {\n    if (!node.requestSubmit)\n      node.requestSubmit = handleSubmit as typeof node.requestSubmit;\n    function callExtender(stage: 'MOUNT' | 'UPDATE') {\n      return function (extender: Extender<Data>) {\n        return extender({\n          form: node,\n          stage,\n          controls: Array.from(node.elements).filter(isFormControl),\n          data,\n          errors,\n          warnings,\n          touched,\n          isValid,\n          isValidating,\n          isSubmitting,\n          isDirty,\n          interacted,\n          config,\n          addValidator,\n          addTransformer,\n          setFields,\n          validate,\n          reset,\n          createSubmitHandler,\n          handleSubmit,\n        });\n      };\n    }\n\n    _setCurrentExtenders(extender.map(callExtender('MOUNT')));\n    node.noValidate = !!config.validate;\n    const { defaultData, defaultTouched } = getFormDefaultValues<Data>(node);\n    _setFormNode(node);\n    setInitialValues(_merge(_cloneDeep(defaultData), _getInitialValues()));\n    setFields(_getInitialValues());\n    touched.set(defaultTouched);\n\n    function setCheckboxValues(target: HTMLInputElement) {\n      const elPath = getPath(target);\n      const checkboxes = Array.from(\n        node.querySelectorAll(`[name=\"${target.name}\"]`)\n      ).filter((checkbox) => {\n        if (!isFormControl(checkbox)) return false;\n        return elPath === getPath(checkbox);\n      });\n      if (checkboxes.length === 0) return;\n      if (checkboxes.length === 1) {\n        return data.update(($data) =>\n          _set($data, getPath(target), target.checked)\n        );\n      }\n      return data.update(($data) => {\n        return _set(\n          $data,\n          getPath(target),\n          checkboxes\n            .filter(isInputElement)\n            .filter((el: HTMLInputElement) => el.checked)\n            .map((el: HTMLInputElement) => el.value)\n        );\n      });\n    }\n\n    function setRadioValues(target: HTMLInputElement) {\n      const radios = node.querySelectorAll(`[name=\"${target.name}\"]`);\n      const checkedRadio = Array.from(radios).find(\n        (el) => isInputElement(el) && el.checked\n      ) as HTMLInputElement | undefined;\n      data.update(($data) => _set($data, getPath(target), checkedRadio?.value));\n    }\n\n    function setFileValue(target: HTMLInputElement) {\n      const files = Array.from(target.files ?? []);\n      data.update(($data) => {\n        return _set($data, getPath(target), target.multiple ? files : files[0]);\n      });\n    }\n\n    function setSelectValue(target: HTMLSelectElement) {\n      if (!target.multiple) {\n        data.update(($data) => {\n          return _set($data, getPath(target), target.value);\n        });\n      } else {\n        const selectedOptions = Array.from(target.options)\n          .filter((opt) => opt.selected)\n          .map((opt) => opt.value);\n        data.update(($data) => {\n          return _set($data, getPath(target), selectedOptions);\n        });\n      }\n    }\n\n    function handleInput(e: Event) {\n      const target = e.target;\n      if (\n        !target ||\n        !isFormControl(target) ||\n        isSelectElement(target) ||\n        shouldIgnore(target)\n      )\n        return;\n      if (['checkbox', 'radio', 'file'].includes(target.type)) return;\n      if (!target.name) return;\n      isDirty.set(true);\n      const inputValue = getInputTextOrNumber(target);\n      interacted.set(target.name);\n      data.update(($data) => {\n        return _set($data, getPath(target), inputValue);\n      });\n    }\n\n    function handleChange(e: Event) {\n      const target = e.target;\n      if (!target || !isFormControl(target) || shouldIgnore(target)) return;\n      if (!target.name) return;\n      setTouched<string, any>(getPath(target), true);\n      interacted.set(target.name);\n      if (\n        isSelectElement(target) ||\n        ['checkbox', 'radio', 'file', 'hidden'].includes(target.type)\n      ) {\n        isDirty.set(true);\n      }\n      if (target.type === 'hidden') {\n        data.update(($data) => {\n          return _set($data, getPath(target), target.value);\n        });\n      }\n      if (isSelectElement(target)) setSelectValue(target);\n      else if (!isInputElement(target)) return;\n      else if (target.type === 'checkbox') setCheckboxValues(target);\n      else if (target.type === 'radio') setRadioValues(target);\n      else if (target.type === 'file') setFileValue(target);\n    }\n\n    function handleBlur(e: Event) {\n      const target = e.target;\n      if (!target || !isFormControl(target) || shouldIgnore(target)) return;\n      if (!target.name) return;\n      setTouched<string, any>(getPath(target), true);\n      interacted.set(target.name);\n    }\n\n    function handleReset(e: Event) {\n      e.preventDefault();\n      reset();\n    }\n\n    const mutationOptions = { childList: true, subtree: true };\n\n    function unsetTaggedForRemove(formControls: FormControl[]) {\n      let currentData = get(data);\n      let currentTouched = get(touched);\n      let currentErrors = get(errors);\n      let currentWarnings = get(warnings);\n      for (const control of formControls.reverse()) {\n        if (\n          control.hasAttribute('data-felte-keep-on-remove') &&\n          control.dataset.felteKeepOnRemove !== 'false'\n        )\n          continue;\n        const fieldArrayReg = /.*(\\[[0-9]+\\]|\\.[0-9]+)\\.[^.]+$/;\n        let fieldName = getPath(control);\n        const shape = get(touched);\n        const isFieldArray = fieldArrayReg.test(fieldName);\n        if (isFieldArray) {\n          const arrayPath = fieldName.split('.').slice(0, -1).join('.');\n          const valueToRemove = _get(shape, arrayPath);\n          if (\n            _isPlainObject(valueToRemove) &&\n            Object.keys(valueToRemove).length <= 1\n          ) {\n            fieldName = arrayPath;\n          }\n        }\n        currentData = _unset(currentData, fieldName);\n        currentTouched = _unset(currentTouched, fieldName);\n        currentErrors = _unset(currentErrors, fieldName);\n        currentWarnings = _unset(currentWarnings, fieldName);\n      }\n      data.set(currentData as Data);\n      touched.set(currentTouched);\n      errors.set(currentErrors);\n      warnings.set(currentWarnings);\n    }\n\n    const updateAddedNodes = debounce(() => {\n      _getCurrentExtenders().forEach((extender) => extender.destroy?.());\n      _setCurrentExtenders(extender.map(callExtender('UPDATE')));\n      const {\n        defaultData: newDefaultData,\n        defaultTouched: newDefaultTouched,\n      } = getFormDefaultValues<Data>(node);\n      data.update(($data) => _defaultsDeep<Data>($data, newDefaultData));\n      touched.update(($touched) => {\n        return _defaultsDeep($touched, newDefaultTouched);\n      });\n      helpers.setFields(get(data) as Data);\n    }, 0);\n\n    let removedFormControls: FormControl[] = [];\n\n    const updateRemovedNodes = debounce(() => {\n      _getCurrentExtenders().forEach((extender) => extender.destroy?.());\n      _setCurrentExtenders(extender.map(callExtender('UPDATE')));\n      unsetTaggedForRemove(removedFormControls);\n      removedFormControls = [];\n    }, 0);\n\n    function handleNodeAddition(mutation: MutationRecord) {\n      const shouldUpdate = Array.from(mutation.addedNodes).some((node) => {\n        if (!isElement(node)) return false;\n        if (isFormControl(node)) return true;\n        const formControls = getFormControls(node);\n        return formControls.length > 0;\n      });\n      if (!shouldUpdate) return;\n      updateAddedNodes();\n    }\n\n    function handleNodeRemoval(mutation: MutationRecord) {\n      for (const removedNode of mutation.removedNodes) {\n        if (!isElement(removedNode)) continue;\n        const formControls = getFormControls(removedNode);\n        if (formControls.length === 0) continue;\n        removedFormControls.push(...formControls);\n        updateRemovedNodes();\n      }\n    }\n\n    function mutationCallback(mutationList: MutationRecord[]) {\n      for (const mutation of mutationList) {\n        if (mutation.type !== 'childList') continue;\n        if (mutation.addedNodes.length > 0) handleNodeAddition(mutation);\n        if (mutation.removedNodes.length > 0) handleNodeRemoval(mutation);\n      }\n    }\n\n    const observer = new MutationObserver(mutationCallback);\n\n    observer.observe(node, mutationOptions);\n    node.addEventListener('input', handleInput);\n    node.addEventListener('change', handleChange);\n    node.addEventListener('focusout', handleBlur);\n    node.addEventListener('submit', handleSubmit);\n    node.addEventListener('reset', handleReset);\n    const unsubscribeErrors = errors.subscribe(($errors) => {\n      for (const el of node.elements) {\n        if (!isFormControl(el) || !el.name) continue;\n        const fieldErrors = _get($errors, getPath(el));\n        const message = Array.isArray(fieldErrors)\n          ? fieldErrors.join('\\n')\n          : typeof fieldErrors === 'string'\n          ? fieldErrors\n          : undefined;\n        if (message === el.dataset.felteValidationMessage) continue;\n        if (message) {\n          el.dataset.felteValidationMessage = message;\n          el.setAttribute('aria-invalid', 'true');\n        } else {\n          delete el.dataset.felteValidationMessage;\n          el.removeAttribute('aria-invalid');\n        }\n      }\n    });\n\n    return {\n      destroy() {\n        observer.disconnect();\n        node.removeEventListener('input', handleInput);\n        node.removeEventListener('change', handleChange);\n        node.removeEventListener('focusout', handleBlur);\n        node.removeEventListener('submit', handleSubmit);\n        node.removeEventListener('reset', handleReset);\n        unsubscribeErrors();\n        _getCurrentExtenders().forEach((extender) => extender.destroy?.());\n      },\n    };\n  }\n\n  return { form };\n}\n"],"names":[],"mappings":"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"}