{"version":3,"file":"helpers.js","sources":["../../src/helpers.ts"],"sourcesContent":["import type {\n  Errors,\n  Extender,\n  FieldValue,\n  FormConfig,\n  Obj,\n  Stores,\n  Touched,\n  ValidationFunction,\n  TransformFunction,\n  Setter,\n  ObjectSetter,\n  PartialErrorsSetter,\n  AssignableErrors,\n  PrimitiveSetter,\n  FieldsSetter,\n  Helpers,\n  Keyed,\n  CreateSubmitHandlerConfig,\n  ExtenderHandler,\n  Form,\n} from '@felte/common';\nimport {\n  deepSet,\n  setForm,\n  _cloneDeep,\n  _get,\n  _set,\n  _unset,\n  _update,\n  _isPlainObject,\n  createId,\n  _merge,\n  deepSome,\n  isFormControl,\n} from '@felte/common';\nimport { get } from './get';\nimport { deepSetTouched } from './deep-set-touched';\nimport { deepSetKey, deepRemoveKey } from './deep-set-key';\nimport { createEventConstructors } from './events';\nimport { createDefaultSubmitHandler } from './default-submit-handler';\n\ntype CreateHelpersOptions<Data extends Obj> = {\n  config: FormConfig<Data>;\n  stores: Stores<Data>;\n  validateErrors(\n    data: Data | Keyed<Data>,\n    altValidate?: ValidationFunction<Data> | ValidationFunction<Data>[]\n  ): Promise<Errors<Data> | undefined>;\n  validateWarnings(\n    data: Data | Keyed<Data>,\n    altWarn?: ValidationFunction<Data> | ValidationFunction<Data>[]\n  ): Promise<Errors<Data> | undefined>;\n  extender: Extender<Data>[];\n  addValidator(validator: ValidationFunction<Data>): void;\n  addTransformer(transformer: TransformFunction<Data>): void;\n  _getCurrentExtenders(): ExtenderHandler<Data>[];\n};\n\nfunction addAtIndex<Data extends Obj>(\n  storeValue: Data,\n  path: string,\n  value: any,\n  index?: number\n) {\n  return _update(storeValue, path, (oldValue) => {\n    if (typeof oldValue !== 'undefined' && !Array.isArray(oldValue))\n      return oldValue;\n    if (!oldValue) oldValue = [];\n    if (typeof index === 'undefined') {\n      oldValue.push(value);\n    } else {\n      oldValue.splice(index, 0, value);\n    }\n    return oldValue;\n  });\n}\n\nfunction swapInArray<Data extends Obj>(\n  storeValue: Data,\n  path: string,\n  from: number,\n  to: number\n) {\n  return _update(storeValue, path, (oldValue) => {\n    if (!oldValue || !Array.isArray(oldValue)) return oldValue;\n    [oldValue[from], oldValue[to]] = [oldValue[to], oldValue[from]];\n    return oldValue;\n  });\n}\n\nfunction moveInArray<Data extends Obj>(\n  storeValue: Data,\n  path: string,\n  from: number,\n  to: number\n) {\n  return _update(storeValue, path, (oldValue) => {\n    if (!oldValue || !Array.isArray(oldValue)) return oldValue;\n    oldValue.splice(to, 0, oldValue.splice(from, 1)[0] as any);\n    return oldValue;\n  });\n}\n\nfunction isUpdater<T>(value: unknown): value is (value: T) => T {\n  return typeof value === 'function';\n}\n\nfunction createSetHelper<Data extends Obj, Path extends string>(\n  storeSetter: (\n    updater: (value: Errors<Data>) => AssignableErrors<Data>\n  ) => void\n): PartialErrorsSetter<Data, Path>;\nfunction createSetHelper<Data extends Obj, Path extends string>(\n  storeSetter: (updater: (value: Data) => Data) => void\n): ObjectSetter<Data, Path>;\nfunction createSetHelper<Data extends boolean | string | null>(\n  storeSetter: (updater: (value: Data) => Data) => void\n): PrimitiveSetter<Data>;\nfunction createSetHelper<Data extends Obj | boolean>(\n  storeSetter: (updater: (value: Data) => Data) => void\n): Setter<Data> {\n  const setHelper = (\n    pathOrValue: string | Data | ((value: Data) => Data),\n    valueOrUpdater?: unknown | ((value: unknown) => unknown)\n  ) => {\n    if (typeof pathOrValue === 'string') {\n      const path = pathOrValue;\n      storeSetter((oldValue) => {\n        const newValue = isUpdater(valueOrUpdater)\n          ? (valueOrUpdater(_get(oldValue as Obj, path)) as Data)\n          : valueOrUpdater;\n        return _set(\n          oldValue as Obj,\n          path,\n          newValue as FieldValue | FieldValue[]\n        ) as Data;\n      });\n    } else {\n      storeSetter((oldValue) =>\n        isUpdater<Data>(pathOrValue) ? pathOrValue(oldValue) : pathOrValue\n      );\n    }\n  };\n\n  return setHelper as Setter<Data>;\n}\n\nexport function createHelpers<Data extends Obj>({\n  stores,\n  config,\n  validateErrors,\n  validateWarnings,\n  _getCurrentExtenders,\n}: CreateHelpersOptions<Data>) {\n  let formNode: HTMLFormElement | undefined;\n  let initialValues = deepSetKey((config.initialValues ?? {}) as Data);\n\n  const {\n    data,\n    touched,\n    errors,\n    warnings,\n    isDirty,\n    isSubmitting,\n    interacted,\n  } = stores;\n\n  const setData = createSetHelper<Data, string>(data.update);\n\n  const setTouched = createSetHelper<Touched<Data>, string>(touched.update);\n\n  const setErrors = createSetHelper<Data, string>(errors.update);\n\n  const setWarnings = createSetHelper<Data, string>(warnings.update);\n\n  function updateFields(updater: (values: Data) => Data) {\n    setData((oldData) => {\n      const newData = updater(oldData);\n      if (formNode) setForm(formNode, newData);\n      return newData;\n    });\n  }\n\n  const setFields: FieldsSetter<Data, string> = (\n    pathOrValue: string | Data | ((value: Data) => Data),\n    valueOrUpdater?: unknown | ((value: unknown) => unknown),\n    shouldTouch?: boolean\n  ) => {\n    const fieldsSetter = createSetHelper<Data, string>(updateFields);\n    fieldsSetter(pathOrValue as any, valueOrUpdater as any);\n    if (typeof pathOrValue === 'string' && shouldTouch) {\n      setTouched<string, any>(pathOrValue, true);\n    }\n  };\n\n  function addField(path: string, value: unknown, index?: number) {\n    const touchedValue = _isPlainObject(value)\n      ? deepSetTouched(value, false)\n      : false;\n    const errValue = _isPlainObject(touchedValue)\n      ? deepSet(touchedValue, [])\n      : [];\n    value = _isPlainObject(value) ? { ...value, key: createId() } : value;\n    errors.update(($errors) => {\n      return addAtIndex($errors, path, errValue, index);\n    });\n    warnings.update(($warnings) => {\n      return addAtIndex($warnings, path, errValue, index);\n    });\n    touched.update(($touched) => {\n      return addAtIndex($touched, path, touchedValue, index);\n    });\n    data.update(($data) => {\n      const newData = addAtIndex($data, path, value, index);\n      setTimeout(() => formNode && setForm(formNode, newData));\n      return newData;\n    });\n  }\n\n  function updateAll(updater: <Data extends Obj>(storeValue: Data) => Data) {\n    errors.update(updater);\n    warnings.update(updater);\n    touched.update(updater);\n    data.update(($data) => {\n      const newData = updater($data);\n      setTimeout(() => formNode && setForm(formNode, newData));\n      return newData;\n    });\n  }\n\n  function unsetField(path: string) {\n    updateAll((storeValue) => _unset(storeValue, path));\n  }\n\n  function swapFields(path: string, from: number, to: number) {\n    updateAll((storeValue) => swapInArray(storeValue, path, from, to));\n  }\n\n  function moveField(path: string, from: number, to: number) {\n    updateAll((storeValue) => moveInArray(storeValue, path, from, to));\n  }\n\n  function resetField(path: string) {\n    const initialValue = _get(initialValues, path);\n    const touchedValue: any = _isPlainObject(initialValue)\n      ? deepSetTouched(initialValue as Obj, false)\n      : false;\n    const errValue: any = _isPlainObject(touchedValue)\n      ? deepSet(touchedValue, [])\n      : [];\n    data.update(($data) => {\n      const newData = _set($data, path, initialValue);\n      if (formNode) setForm(formNode, newData);\n      return newData;\n    });\n    touched.update(($touched) => {\n      return _set($touched, path, touchedValue);\n    });\n    errors.update(($errors) => {\n      return _set($errors, path, errValue);\n    });\n    warnings.update(($warnings) => {\n      return _set($warnings, path, errValue);\n    });\n  }\n\n  const setIsSubmitting = createSetHelper(isSubmitting.update);\n\n  const setIsDirty = createSetHelper(isDirty.update);\n\n  const setInteracted = createSetHelper(interacted.update);\n\n  async function validate(): Promise<Errors<Data> | void> {\n    const currentData = get(data);\n    touched.set(deepSetTouched(currentData, true));\n    interacted.set(null);\n    const currentErrors = await validateErrors(currentData);\n    await validateWarnings(currentData);\n    return currentErrors;\n  }\n\n  function reset(): void {\n    setFields(_cloneDeep(initialValues));\n    setTouched(($touched) => deepSet($touched, false) as Touched<Data>);\n    interacted.set(null);\n    isDirty.set(false);\n  }\n\n  function createSubmitHandler(altConfig?: CreateSubmitHandlerConfig<Data>) {\n    return async function handleSubmit(event?: Event) {\n      const {\n        createErrorEvent,\n        createSubmitEvent,\n        createSuccessEvent,\n      } = createEventConstructors<Data>();\n      const submitEvent = createSubmitEvent();\n      formNode?.dispatchEvent(submitEvent);\n      const onError =\n        submitEvent.onError ?? altConfig?.onError ?? config.onError;\n      const onSuccess =\n        submitEvent.onSuccess ?? altConfig?.onSuccess ?? config.onSuccess;\n      const onSubmit =\n        submitEvent.onSubmit ??\n        altConfig?.onSubmit ??\n        config.onSubmit ??\n        createDefaultSubmitHandler(formNode);\n      if (!onSubmit) return;\n      event?.preventDefault();\n      if (submitEvent.defaultPrevented) return;\n      isSubmitting.set(true);\n      interacted.set(null);\n      const currentData = deepRemoveKey(get(data));\n      const currentErrors = await validateErrors(\n        currentData,\n        altConfig?.validate\n      );\n      const currentWarnings = await validateWarnings(\n        currentData,\n        altConfig?.warn\n      );\n      if (currentWarnings)\n        warnings.set(_merge(deepSet(currentData, []), currentWarnings));\n      touched.set(deepSetTouched(currentData, true));\n      if (currentErrors) {\n        touched.set(deepSetTouched(currentErrors as Data, true));\n        const hasErrors = deepSome(currentErrors, (error) =>\n          Array.isArray(error) ? error.length >= 1 : !!error\n        );\n        if (hasErrors) {\n          await new Promise((r) => setTimeout(r));\n          _getCurrentExtenders().forEach((extender) =>\n            extender.onSubmitError?.({\n              data: currentData,\n              errors: currentErrors,\n            })\n          );\n          isSubmitting.set(false);\n          return;\n        }\n      }\n      const context = {\n        setFields,\n        setData,\n        setTouched,\n        setErrors,\n        setWarnings,\n        unsetField,\n        addField,\n        resetField,\n        reset,\n        setInitialValues: publicHelpers.setInitialValues,\n        moveField,\n        swapFields,\n        form: formNode,\n        controls:\n          formNode && Array.from(formNode.elements).filter(isFormControl),\n        config: { ...config, ...altConfig },\n      };\n      try {\n        const response = await onSubmit(currentData, context);\n        formNode?.dispatchEvent(createSuccessEvent({ response, ...context }));\n        await onSuccess?.(response, context);\n      } catch (e) {\n        const errorEvent = createErrorEvent({ error: e, ...context });\n        formNode?.dispatchEvent(errorEvent);\n        if (!onError && !errorEvent.defaultPrevented) {\n          throw e;\n        }\n        if (!onError && !errorEvent.errors) return;\n        const serverErrors = errorEvent.errors || (await onError?.(e, context));\n        if (serverErrors) {\n          touched.set(deepSetTouched((serverErrors as unknown) as Data, true));\n          errors.set(serverErrors);\n          await new Promise((r) => setTimeout(r));\n          _getCurrentExtenders().forEach((extender) =>\n            extender.onSubmitError?.({\n              data: currentData,\n              errors: get(errors),\n            })\n          );\n        }\n      } finally {\n        isSubmitting.set(false);\n      }\n    };\n  }\n\n  const publicHelpers: Helpers<Data> & Omit<Form<Data>, 'form'> = {\n    setData,\n    setFields,\n    setTouched,\n    setErrors,\n    setWarnings,\n    setIsSubmitting,\n    setIsDirty,\n    setInteracted,\n    validate,\n    reset,\n    unsetField,\n    resetField,\n    addField,\n    swapFields,\n    moveField,\n    createSubmitHandler,\n    handleSubmit: createSubmitHandler(),\n    setInitialValues: (values: Data) => {\n      initialValues = deepSetKey(values);\n    },\n  };\n\n  const privateHelpers = {\n    _setFormNode(node: HTMLFormElement) {\n      formNode = node;\n    },\n    _getInitialValues: () => initialValues,\n  };\n\n  return {\n    public: publicHelpers,\n    private: privateHelpers,\n  };\n}\n"],"names":[],"mappings":";;;;;;;AA2DA,SAAS,UAAU,CACjB,UAAgB,EAChB,IAAY,EACZ,KAAU,EACV,KAAc,EAAA;IAEd,OAAO,OAAO,CAAC,UAAU,EAAE,IAAI,EAAE,CAAC,QAAQ,KAAI;QAC5C,IAAI,OAAO,QAAQ,KAAK,WAAW,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC;AAC7D,YAAA,OAAO,QAAQ,CAAC;AAClB,QAAA,IAAI,CAAC,QAAQ;YAAE,QAAQ,GAAG,EAAE,CAAC;AAC7B,QAAA,IAAI,OAAO,KAAK,KAAK,WAAW,EAAE;AAChC,YAAA,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACtB,SAAA;AAAM,aAAA;YACL,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;AAClC,SAAA;AACD,QAAA,OAAO,QAAQ,CAAC;AAClB,KAAC,CAAC,CAAC;AACL,CAAC;AAED,SAAS,WAAW,CAClB,UAAgB,EAChB,IAAY,EACZ,IAAY,EACZ,EAAU,EAAA;IAEV,OAAO,OAAO,CAAC,UAAU,EAAE,IAAI,EAAE,CAAC,QAAQ,KAAI;QAC5C,IAAI,CAAC,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC;AAAE,YAAA,OAAO,QAAQ,CAAC;QAC3D,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;AAChE,QAAA,OAAO,QAAQ,CAAC;AAClB,KAAC,CAAC,CAAC;AACL,CAAC;AAED,SAAS,WAAW,CAClB,UAAgB,EAChB,IAAY,EACZ,IAAY,EACZ,EAAU,EAAA;IAEV,OAAO,OAAO,CAAC,UAAU,EAAE,IAAI,EAAE,CAAC,QAAQ,KAAI;QAC5C,IAAI,CAAC,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC;AAAE,YAAA,OAAO,QAAQ,CAAC;AAC3D,QAAA,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAQ,CAAC,CAAC;AAC3D,QAAA,OAAO,QAAQ,CAAC;AAClB,KAAC,CAAC,CAAC;AACL,CAAC;AAED,SAAS,SAAS,CAAI,KAAc,EAAA;AAClC,IAAA,OAAO,OAAO,KAAK,KAAK,UAAU,CAAC;AACrC,CAAC;AAaD,SAAS,eAAe,CACtB,WAAqD,EAAA;AAErD,IAAA,MAAM,SAAS,GAAG,CAChB,WAAoD,EACpD,cAAwD,KACtD;AACF,QAAA,IAAI,OAAO,WAAW,KAAK,QAAQ,EAAE;YACnC,MAAM,IAAI,GAAG,WAAW,CAAC;AACzB,YAAA,WAAW,CAAC,CAAC,QAAQ,KAAI;AACvB,gBAAA,MAAM,QAAQ,GAAG,SAAS,CAAC,cAAc,CAAC;sBACrC,cAAc,CAAC,IAAI,CAAC,QAAe,EAAE,IAAI,CAAC,CAAU;sBACrD,cAAc,CAAC;gBACnB,OAAO,IAAI,CACT,QAAe,EACf,IAAI,EACJ,QAAqC,CAC9B,CAAC;AACZ,aAAC,CAAC,CAAC;AACJ,SAAA;AAAM,aAAA;YACL,WAAW,CAAC,CAAC,QAAQ,KACnB,SAAS,CAAO,WAAW,CAAC,GAAG,WAAW,CAAC,QAAQ,CAAC,GAAG,WAAW,CACnE,CAAC;AACH,SAAA;AACH,KAAC,CAAC;AAEF,IAAA,OAAO,SAAyB,CAAC;AACnC,CAAC;AAEe,SAAA,aAAa,CAAmB,EAC9C,MAAM,EACN,MAAM,EACN,cAAc,EACd,gBAAgB,EAChB,oBAAoB,GACO,EAAA;;AAC3B,IAAA,IAAI,QAAqC,CAAC;AAC1C,IAAA,IAAI,aAAa,GAAG,UAAU,EAAE,CAAA,EAAA,GAAA,MAAM,CAAC,aAAa,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,EAAE,EAAU,CAAC;AAErE,IAAA,MAAM,EACJ,IAAI,EACJ,OAAO,EACP,MAAM,EACN,QAAQ,EACR,OAAO,EACP,YAAY,EACZ,UAAU,GACX,GAAG,MAAM,CAAC;IAEX,MAAM,OAAO,GAAG,eAAe,CAAe,IAAI,CAAC,MAAM,CAAC,CAAC;IAE3D,MAAM,UAAU,GAAG,eAAe,CAAwB,OAAO,CAAC,MAAM,CAAC,CAAC;IAE1E,MAAM,SAAS,GAAG,eAAe,CAAe,MAAM,CAAC,MAAM,CAAC,CAAC;IAE/D,MAAM,WAAW,GAAG,eAAe,CAAe,QAAQ,CAAC,MAAM,CAAC,CAAC;IAEnE,SAAS,YAAY,CAAC,OAA+B,EAAA;AACnD,QAAA,OAAO,CAAC,CAAC,OAAO,KAAI;AAClB,YAAA,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AACjC,YAAA,IAAI,QAAQ;AAAE,gBAAA,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AACzC,YAAA,OAAO,OAAO,CAAC;AACjB,SAAC,CAAC,CAAC;KACJ;IAED,MAAM,SAAS,GAA+B,CAC5C,WAAoD,EACpD,cAAwD,EACxD,WAAqB,KACnB;AACF,QAAA,MAAM,YAAY,GAAG,eAAe,CAAe,YAAY,CAAC,CAAC;AACjE,QAAA,YAAY,CAAC,WAAkB,EAAE,cAAqB,CAAC,CAAC;AACxD,QAAA,IAAI,OAAO,WAAW,KAAK,QAAQ,IAAI,WAAW,EAAE;AAClD,YAAA,UAAU,CAAc,WAAW,EAAE,IAAI,CAAC,CAAC;AAC5C,SAAA;AACH,KAAC,CAAC;AAEF,IAAA,SAAS,QAAQ,CAAC,IAAY,EAAE,KAAc,EAAE,KAAc,EAAA;AAC5D,QAAA,MAAM,YAAY,GAAG,cAAc,CAAC,KAAK,CAAC;AACxC,cAAE,cAAc,CAAC,KAAK,EAAE,KAAK,CAAC;cAC5B,KAAK,CAAC;AACV,QAAA,MAAM,QAAQ,GAAG,cAAc,CAAC,YAAY,CAAC;AAC3C,cAAE,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC;cACzB,EAAE,CAAC;AACP,QAAA,KAAK,GAAG,cAAc,CAAC,KAAK,CAAC,GAAQ,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAK,CAAE,EAAA,EAAA,GAAG,EAAE,QAAQ,EAAE,MAAK,KAAK,CAAC;AACtE,QAAA,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,KAAI;YACxB,OAAO,UAAU,CAAC,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;AACpD,SAAC,CAAC,CAAC;AACH,QAAA,QAAQ,CAAC,MAAM,CAAC,CAAC,SAAS,KAAI;YAC5B,OAAO,UAAU,CAAC,SAAS,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;AACtD,SAAC,CAAC,CAAC;AACH,QAAA,OAAO,CAAC,MAAM,CAAC,CAAC,QAAQ,KAAI;YAC1B,OAAO,UAAU,CAAC,QAAQ,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;AACzD,SAAC,CAAC,CAAC;AACH,QAAA,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,KAAI;AACpB,YAAA,MAAM,OAAO,GAAG,UAAU,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AACtD,YAAA,UAAU,CAAC,MAAM,QAAQ,IAAI,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC;AACzD,YAAA,OAAO,OAAO,CAAC;AACjB,SAAC,CAAC,CAAC;KACJ;IAED,SAAS,SAAS,CAAC,OAAqD,EAAA;AACtE,QAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AACvB,QAAA,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AACzB,QAAA,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AACxB,QAAA,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,KAAI;AACpB,YAAA,MAAM,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;AAC/B,YAAA,UAAU,CAAC,MAAM,QAAQ,IAAI,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC;AACzD,YAAA,OAAO,OAAO,CAAC;AACjB,SAAC,CAAC,CAAC;KACJ;IAED,SAAS,UAAU,CAAC,IAAY,EAAA;AAC9B,QAAA,SAAS,CAAC,CAAC,UAAU,KAAK,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;KACrD;AAED,IAAA,SAAS,UAAU,CAAC,IAAY,EAAE,IAAY,EAAE,EAAU,EAAA;AACxD,QAAA,SAAS,CAAC,CAAC,UAAU,KAAK,WAAW,CAAC,UAAU,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;KACpE;AAED,IAAA,SAAS,SAAS,CAAC,IAAY,EAAE,IAAY,EAAE,EAAU,EAAA;AACvD,QAAA,SAAS,CAAC,CAAC,UAAU,KAAK,WAAW,CAAC,UAAU,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;KACpE;IAED,SAAS,UAAU,CAAC,IAAY,EAAA;QAC9B,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;AAC/C,QAAA,MAAM,YAAY,GAAQ,cAAc,CAAC,YAAY,CAAC;AACpD,cAAE,cAAc,CAAC,YAAmB,EAAE,KAAK,CAAC;cAC1C,KAAK,CAAC;AACV,QAAA,MAAM,QAAQ,GAAQ,cAAc,CAAC,YAAY,CAAC;AAChD,cAAE,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC;cACzB,EAAE,CAAC;AACP,QAAA,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,KAAI;YACpB,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;AAChD,YAAA,IAAI,QAAQ;AAAE,gBAAA,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AACzC,YAAA,OAAO,OAAO,CAAC;AACjB,SAAC,CAAC,CAAC;AACH,QAAA,OAAO,CAAC,MAAM,CAAC,CAAC,QAAQ,KAAI;YAC1B,OAAO,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;AAC5C,SAAC,CAAC,CAAC;AACH,QAAA,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,KAAI;YACxB,OAAO,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;AACvC,SAAC,CAAC,CAAC;AACH,QAAA,QAAQ,CAAC,MAAM,CAAC,CAAC,SAAS,KAAI;YAC5B,OAAO,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;AACzC,SAAC,CAAC,CAAC;KACJ;IAED,MAAM,eAAe,GAAG,eAAe,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IAE7D,MAAM,UAAU,GAAG,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAEnD,MAAM,aAAa,GAAG,eAAe,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AAEzD,IAAA,eAAe,QAAQ,GAAA;AACrB,QAAA,MAAM,WAAW,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC;AAC/C,QAAA,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACrB,QAAA,MAAM,aAAa,GAAG,MAAM,cAAc,CAAC,WAAW,CAAC,CAAC;AACxD,QAAA,MAAM,gBAAgB,CAAC,WAAW,CAAC,CAAC;AACpC,QAAA,OAAO,aAAa,CAAC;KACtB;AAED,IAAA,SAAS,KAAK,GAAA;AACZ,QAAA,SAAS,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC;AACrC,QAAA,UAAU,CAAC,CAAC,QAAQ,KAAK,OAAO,CAAC,QAAQ,EAAE,KAAK,CAAkB,CAAC,CAAC;AACpE,QAAA,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACrB,QAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;KACpB;IAED,SAAS,mBAAmB,CAAC,SAA2C,EAAA;AACtE,QAAA,OAAO,eAAe,YAAY,CAAC,KAAa,EAAA;;YAC9C,MAAM,EACJ,gBAAgB,EAChB,iBAAiB,EACjB,kBAAkB,GACnB,GAAG,uBAAuB,EAAQ,CAAC;AACpC,YAAA,MAAM,WAAW,GAAG,iBAAiB,EAAE,CAAC;YACxC,QAAQ,KAAA,IAAA,IAAR,QAAQ,KAAR,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,QAAQ,CAAE,aAAa,CAAC,WAAW,CAAC,CAAC;AACrC,YAAA,MAAM,OAAO,GACX,CAAA,EAAA,GAAA,MAAA,WAAW,CAAC,OAAO,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,SAAS,aAAT,SAAS,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAT,SAAS,CAAE,OAAO,mCAAI,MAAM,CAAC,OAAO,CAAC;AAC9D,YAAA,MAAM,SAAS,GACb,CAAA,EAAA,GAAA,MAAA,WAAW,CAAC,SAAS,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,SAAS,aAAT,SAAS,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAT,SAAS,CAAE,SAAS,mCAAI,MAAM,CAAC,SAAS,CAAC;YACpE,MAAM,QAAQ,GACZ,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,WAAW,CAAC,QAAQ,MACpB,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,SAAS,KAAT,IAAA,IAAA,SAAS,uBAAT,SAAS,CAAE,QAAQ,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GACnB,MAAM,CAAC,QAAQ,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GACf,0BAA0B,CAAC,QAAQ,CAAC,CAAC;AACvC,YAAA,IAAI,CAAC,QAAQ;gBAAE,OAAO;AACtB,YAAA,KAAK,aAAL,KAAK,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAL,KAAK,CAAE,cAAc,EAAE,CAAC;YACxB,IAAI,WAAW,CAAC,gBAAgB;gBAAE,OAAO;AACzC,YAAA,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACvB,YAAA,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACrB,MAAM,WAAW,GAAG,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;AAC7C,YAAA,MAAM,aAAa,GAAG,MAAM,cAAc,CACxC,WAAW,EACX,SAAS,KAAA,IAAA,IAAT,SAAS,KAAT,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,SAAS,CAAE,QAAQ,CACpB,CAAC;AACF,YAAA,MAAM,eAAe,GAAG,MAAM,gBAAgB,CAC5C,WAAW,EACX,SAAS,KAAA,IAAA,IAAT,SAAS,KAAT,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,SAAS,CAAE,IAAI,CAChB,CAAC;AACF,YAAA,IAAI,eAAe;AACjB,gBAAA,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC;YAClE,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC;AAC/C,YAAA,IAAI,aAAa,EAAE;gBACjB,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,aAAqB,EAAE,IAAI,CAAC,CAAC,CAAC;AACzD,gBAAA,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,EAAE,CAAC,KAAK,KAC9C,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CACnD,CAAC;AACF,gBAAA,IAAI,SAAS,EAAE;AACb,oBAAA,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,oBAAA,oBAAoB,EAAE,CAAC,OAAO,CAAC,CAAC,QAAQ,KAAI;;AAC1C,wBAAA,OAAA,CAAA,EAAA,GAAA,QAAQ,CAAC,aAAa,MAAG,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,QAAA,EAAA;AACvB,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,MAAM,EAAE,aAAa;AACtB,yBAAA,CAAC,CAAA;AAAA,qBAAA,CACH,CAAC;AACF,oBAAA,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACxB,OAAO;AACR,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,OAAO,GAAG;gBACd,SAAS;gBACT,OAAO;gBACP,UAAU;gBACV,SAAS;gBACT,WAAW;gBACX,UAAU;gBACV,QAAQ;gBACR,UAAU;gBACV,KAAK;gBACL,gBAAgB,EAAE,aAAa,CAAC,gBAAgB;gBAChD,SAAS;gBACT,UAAU;AACV,gBAAA,IAAI,EAAE,QAAQ;AACd,gBAAA,QAAQ,EACN,QAAQ,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC;AACjE,gBAAA,MAAM,EAAO,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,MAAM,CAAK,EAAA,SAAS,CAAE;aACpC,CAAC;YACF,IAAI;gBACF,MAAM,QAAQ,GAAG,MAAM,QAAQ,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;AACtD,gBAAA,QAAQ,KAAR,IAAA,IAAA,QAAQ,KAAR,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,QAAQ,CAAE,aAAa,CAAC,kBAAkB,CAAA,MAAA,CAAA,MAAA,CAAA,EAAG,QAAQ,EAAA,EAAK,OAAO,CAAA,CAAG,CAAC,CAAC;AACtE,gBAAA,OAAM,SAAS,KAAT,IAAA,IAAA,SAAS,KAAT,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,SAAS,CAAG,QAAQ,EAAE,OAAO,CAAC,CAAA,CAAC;AACtC,aAAA;AAAC,YAAA,OAAO,CAAC,EAAE;gBACV,MAAM,UAAU,GAAG,gBAAgB,CAAG,MAAA,CAAA,MAAA,CAAA,EAAA,KAAK,EAAE,CAAC,EAAA,EAAK,OAAO,CAAA,CAAG,CAAC;gBAC9D,QAAQ,KAAA,IAAA,IAAR,QAAQ,KAAR,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,QAAQ,CAAE,aAAa,CAAC,UAAU,CAAC,CAAC;AACpC,gBAAA,IAAI,CAAC,OAAO,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE;AAC5C,oBAAA,MAAM,CAAC,CAAC;AACT,iBAAA;AACD,gBAAA,IAAI,CAAC,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM;oBAAE,OAAO;gBAC3C,MAAM,YAAY,GAAG,UAAU,CAAC,MAAM,KAAK,OAAM,OAAO,aAAP,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAP,OAAO,CAAG,CAAC,EAAE,OAAO,CAAC,CAAA,CAAC,CAAC;AACxE,gBAAA,IAAI,YAAY,EAAE;oBAChB,OAAO,CAAC,GAAG,CAAC,cAAc,CAAE,YAAgC,EAAE,IAAI,CAAC,CAAC,CAAC;AACrE,oBAAA,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;AACzB,oBAAA,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,oBAAA,oBAAoB,EAAE,CAAC,OAAO,CAAC,CAAC,QAAQ,KAAI;;AAC1C,wBAAA,OAAA,CAAA,EAAA,GAAA,QAAQ,CAAC,aAAa,MAAG,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,QAAA,EAAA;AACvB,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC;AACpB,yBAAA,CAAC,CAAA;AAAA,qBAAA,CACH,CAAC;AACH,iBAAA;AACF,aAAA;AAAS,oBAAA;AACR,gBAAA,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACzB,aAAA;AACH,SAAC,CAAC;KACH;AAED,IAAA,MAAM,aAAa,GAA6C;QAC9D,OAAO;QACP,SAAS;QACT,UAAU;QACV,SAAS;QACT,WAAW;QACX,eAAe;QACf,UAAU;QACV,aAAa;QACb,QAAQ;QACR,KAAK;QACL,UAAU;QACV,UAAU;QACV,QAAQ;QACR,UAAU;QACV,SAAS;QACT,mBAAmB;QACnB,YAAY,EAAE,mBAAmB,EAAE;AACnC,QAAA,gBAAgB,EAAE,CAAC,MAAY,KAAI;AACjC,YAAA,aAAa,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;SACpC;KACF,CAAC;AAEF,IAAA,MAAM,cAAc,GAAG;AACrB,QAAA,YAAY,CAAC,IAAqB,EAAA;YAChC,QAAQ,GAAG,IAAI,CAAC;SACjB;AACD,QAAA,iBAAiB,EAAE,MAAM,aAAa;KACvC,CAAC;IAEF,OAAO;AACL,QAAA,MAAM,EAAE,aAAa;AACrB,QAAA,OAAO,EAAE,cAAc;KACxB,CAAC;AACJ;;;;"}